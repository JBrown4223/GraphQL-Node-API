// DR Sales Only
    const [query1] = useState("DR")
    const {dataDR, errorDR} = useQuery(GET_SALES_BY_SECTION, {
            variables: { query1 },
    });

    // LG Sales Only
    const [query2] = useState("LG")
    const {dataLG, errorLG} = useQuery(GET_SALES_BY_SECTION, {
            variables: { query2 },
    });
    
    // BR Sales Only
    const [query3] = useState("DR")
    const {dataBR, errorBR} = useQuery(GET_SALES_BY_SECTION, {
             variables: { query3 },
    });

    if(dataDR) {

        setDRSales(dataDR.getServers);
        console.log("DR Filter Successful");
    }
    else
      console.log(`Msg: ${errorDR}`);

    if(dataLG ) {
        setLGSales(dataLG.getServers);
        console.log("LG Filter Successful");
    }
    else
      console.log(`Msg: ${errorLG}`);

    if(dataBR){
        setBRSales(dataBR.getServers);
        console.log("BR Filter Succesful")

    }
    else
      console.log(`Msg: ${errorBR}`)

    
    //Ranking the Section sales
    setDR( _.sumBy(salesDR, (d) => {
 
        return d.sales
 
    }));
    
    setLG( _.sumBy(salesLG, (l) => {
 
        return l.sales
 
    }));

    setBR( _.sumBy(salesBR, (b) => {
 
        return b.sales
 
    }));

    //Arrays to store each query result
    const [salesData, setData] = useState([]);
    const [salesDR, setDRSales] = useState([]);
    const [salesLG, setLGSales] = useState([]);
    const [salesBR, setBRSales] = useState([]);

    const GET_SALES_BY_SECTION = gql`
  query GetDRSAles($section: String!){
   getServersBySect(section: $section) {
    serverID
    serverName
    section
    sales
    hoursWorked
    effRate
    tipPct
    
  }
}
`;